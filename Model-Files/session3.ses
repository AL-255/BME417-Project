{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[15]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}
{
xpanel("Neuron Parameters", 0)
xlabel("NUMBER OF CELLS")
PRX = 30
xvalue("Number of Photoreceptor rows","PRX", 0,"", 0, 0 )
PRY = 30
xvalue("Number of Photoreceptor columns","PRY", 0,"", 0, 0 )
HorizontalX = 2
xvalue("Number of Horizontal Cell rows","HorizontalX", 2 )
HorizontalY = 2
xvalue("Number of Horizontal Cell columns","HorizontalY", 2 )
BipX = 10
xvalue("Number of Bipolar Cell rows","BipX", 2 )
BipY = 10
xvalue("Number of Bipolar Cell columns","BipY", 2 )
AmaX = 4
xvalue("Number of Amacrine Cell rows","AmaX", 2 )
AmaY = 4
xvalue("Number of Amacrine Cell columns","AmaY", 2 )
GanX = 4
xvalue("Number of Ganglion Cell rows","GanX", 2 )
GanY = 4
xvalue("Number of Ganglion Cell columns","GanY", 2 )
xlabel("")
xlabel("NEURON SPACING (1 unit = 2.39 um)")
PRCellSpacing = 1
xvalue("Photoreceptor spacing","PRCellSpacing", 0,"", 0, 0 )
HorizontalCellSpacing = 15
xvalue("Horizontal Cell spacing","HorizontalCellSpacing", 0,"", 0, 0 )
BipCellSpacing = 3
xvalue("Bipolar Cell spacing","BipCellSpacing", 0,"", 0, 0 )
AmaCellSpacing = 7.5
xvalue("Amacrine Cell spacing","AmaCellSpacing", 0,"", 0, 0 )
GanCellSpacing = 7.5
xvalue("Ganglion Cell spacing","GanCellSpacing", 0,"", 0, 0 )
xlabel("")
xlabel("NEURON Z POSITION")
PRCellZ = 68
xvalue("Photoreceptor Z position","PRCellZ", 0,"", 0, 0 )
HorizontalCellZ = 45
xvalue("Horizontal Cell Z position","HorizontalCellZ", 0,"", 0, 0 )
BipCellZ = 39.5
xvalue("Bipolar Cell Z position","BipCellZ", 0,"", 0, 0 )
AmaCellZ = 28
xvalue("Amacrine Cell Z position","AmaCellZ", 0,"", 0, 0 )
GanCellZ = 10
xvalue("Ganlion Cell Z position","GanCellZ", 0,"", 0, 0 )
xlabel("")
xlabel("RECEPTIVE FIELD SIZES")
HorizontalReceptiveField = 7.5
xvalue("Horizontal Cell Receptive Field radius","HorizontalReceptiveField", 0,"", 0, 0 )
BipReceptiveField = 25
xvalue("Bipolar Cell Receptive Field radius","BipReceptiveField", 0,"", 0, 0 )
AmaReceptiveField = 3.75
xvalue("Amacrine Cell Receptive Field radius","AmaReceptiveField", 0,"", 0, 0 )
GanRodReceptiveField = 3.75
xvalue("Rod Ganglion Cell Receptive Field radius","GanRodReceptiveField", 0,"", 0, 0 )
GanConeReceptiveField = 3.75
xvalue("Cone Ganglion Cell Receptive Field radius","GanConeReceptiveField", 0,"", 0, 0 )
xpanel(-32,118)
}
{
xpanel("Network Parameters", 0)
xlabel("GAP JUNCTIONS")
HomoPRGap = 0.5
xvalue("Homocellular Photoreceptor Gap Junction conductance","HomoPRGap", 0,"", 0, 0 )
HeteroPRGap = 0.1
xvalue("Heterocellular Photoreceptor Gap Junction conductance","HeteroPRGap", 0,"", 0, 0 )
Ama2BipGap = 2
xvalue("Amacrine to ON Bipolar Cell Gap Junction conductance","Ama2BipGap", 0,"", 0, 0 )
xlabel("")
xlabel("SYNAPSES")
xlabel("Synaptic Conductances (uS)")
HorizontalEXSynapticConductance = 0.000588235
xvalue("Horizontal Cell EX Synaptic conductance","HorizontalEXSynapticConductance", 0,"", 0, 0 )
HorizontalINSynapticConductance = -0.05
xvalue("Horizontal Cell IN Synaptic conductance","HorizontalINSynapticConductance", 0,"", 0, 0 )
RodBipSynapticConductance = 0
xvalue("Bipolar Cell Synaptic conductance","RodBipSynapticConductance", 0,"", 0, 0 )
AmaSynapticConductance = 0.003
xvalue("Amacrine Cell Synaptic conductance","AmaSynapticConductance", 0,"", 0, 0 )
GanSynapticConductance = 0.00256
xvalue("Ganglion Cell Synaptic conductance","GanSynapticConductance", 0,"", 0, 0 )
xlabel("")
xlabel("Synaptic Thresholds (mV)")
HorizontalEXSynapticThreshold = -45
xvalue("Horizontal Cell EX Synaptic threshold","HorizontalEXSynapticThreshold", 0,"", 0, 0 )
HorizontalINSynapticThreshold = -47
xvalue("Horizontal Cell IN Synaptic threshold","HorizontalINSynapticThreshold", 0,"", 0, 0 )
RodBipSynapticThreshold = -45
xvalue("Rod Bipolar Cell Synaptic threshold","RodBipSynapticThreshold", 0,"", 0, 0 )
ConeBipSynapticThreshold = -45
xvalue("Cone Bipolar Cell Synaptic threshold","ConeBipSynapticThreshold", 0,"", 0, 0 )
AmaSynapticThreshold = -57
xvalue("Amacrine Cell Synaptic threshold","AmaSynapticThreshold", 0,"", 0, 0 )
ConeONGanSynapticThreshold = -36
xvalue("Cone ON Ganglion Cell Synaptic threshold","ConeONGanSynapticThreshold", 0,"", 0, 0 )
ConeOFFGanSynapticThreshold = -41.5
xvalue("Cone OFF Ganglion Cell Synaptic threshold","ConeOFFGanSynapticThreshold", 0,"", 0, 0 )
xpanel(333,-32)
}
{
xpanel("Stimulation Parameters", 0)
xlabel("ROD STIMULATION")
RodStimAmp = 0
xvalue("Rod stimulation amplitude","RodStimAmp", 0,"", 0, 0 )
RodStimDel = 1300
xvalue("Rod stimulation delay","RodStimDel", 0,"", 0, 0 )
RodStimTime = 400
xvalue("Rod stimulation time","RodStimTime", 0,"", 0, 0 )
xlabel("")
xlabel("CONE STIMULATION")
ConeStimAmp = 0
xvalue("Cone stimulation amplitude","ConeStimAmp", 0,"", 0, 0 )
ConeStimDel = 1300
xvalue("Cone stimulation delay","ConeStimDel", 0,"", 0, 0 )
ConeStimTime = 400
xvalue("Cone stimulation time","ConeStimTime", 0,"", 0, 0 )
xpanel(333,628)
}
{
xpanel("Simulation Parameters", 0)
xlabel("Integration Time Step")
Time_Step = 0.01
xvalue("dt","Time_Step", 0,"", 0, 0 )
xlabel("")
xlabel("Simulation Time")
Simul_Time = 3000
xvalue("Total Simulation time","Simul_Time", 0,"", 0, 0 )
xlabel("")
realtime = 27.1
xvalue("Real Time","realtime", 0,"", 0, 0 )
xlabel("")
t = 42
xvalue("Current Time Step","t", 0,"", 0, 0 )
xlabel("")
xbutton("Run","Run_Simulation()")
xpanel(773,-32)
}
{
save_window_ = new Graph(0)
save_window_.size(0,4000,-65,-36)
scene_vector_[2] = save_window_
{save_window_.view(0, -65, 4000, 29, 892, 148, 308.16, 201.28)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("PRodd[3][7].soma.v( 0.5 )", 1, 1, 0.612866, 0.886554, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,4000,-65,-31)
scene_vector_[3] = save_window_
{save_window_.view(0, -65, 4000, 34, 1354, 826, 300.48, 201.28)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("Bipeven[9][2].soma.v( 0.5 )", 1, 1, 0.560479, 0.864143, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,4000,-65,-10)
scene_vector_[4] = save_window_
{save_window_.view(0, -65, 4000, 55, 1354, 130, 300.48, 201.28)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("Bipodd[5][3].soma.v( 0.5 )", 1, 1, 0.563473, 0.873108, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,540,-65,-10)
scene_vector_[5] = save_window_
{save_window_.view(0, -65, 540, 55, 1342, 478, 300.48, 201.28)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("Bipodd[5][4].soma.v( 0.5 )", 1, 1, 0.569461, 0.944821, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,530,-65,32)
scene_vector_[6] = save_window_
{save_window_.view(0, -65, 530, 97, 1574, 706, 297.6, 201.28)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("Ganodd[1][2].soma.v( 0.5 )", 1, 1, 0.599401, 0.891036, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,4000,-66,19)
scene_vector_[7] = save_window_
{save_window_.view(0, -66, 4000, 85, 1768, 316, 300.48, 201.28)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addvar("Ganeven[3][0].soma.v( 0.5 )", 1, 1, 0.590419, 0.92241, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,4000,-65,-39)
scene_vector_[8] = save_window_
{save_window_.view(0, -65, 4000, 26, 898, 502, 300.48, 201.28)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("PRodd[15][15].soma.v( 0.5 )", 1, 1, 0.581437, 0.9, 2)
}
{
save_window_ = new PlotShape(0)
save_window_.size(-67.3436,245.22,-76.5373,63.5349)
save_window_.variable("v")
scene_vector_[9] = save_window_
{save_window_.view(-67.3436, -76.5373, 312.564, 140.072, 334, 886, 404.16, 181.12)}
fast_flush_list.append(save_window_)
save_window_.save_name("fast_flush_list.")
}
{
save_window_ = new Graph(0)
save_window_.size(-234,2406,-0.0307917,0.0572916)
scene_vector_[10] = save_window_
{save_window_.view(-234, -0.0307917, 2640, 0.0880833, 1248, 148, 610.56, 427.84)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("PRodd[15][15].soma.iCa( 0.5 )", 2, 1, 0.8, 0.9, 2)
save_window_.addexpr("PRodd[15][15].soma.iCl( 0.5 )", 3, 1, 0.8, 0.9, 2)
save_window_.addexpr("PRodd[15][15].soma.iKca( 0.5 )", 4, 1, 0.8, 0.9, 2)
save_window_.addexpr("PRodd[15][15].soma.iKv( 0.5 )", 5, 1, 0.8, 0.9, 2)
save_window_.addexpr("PRodd[15][15].soma.iKx( 0.5 )", 6, 1, 0.8, 0.849485, 2)
save_window_.addexpr("PRodd[15][15].soma.il_Leak( 0.5 )", 8, 1, 0.8, 0.9, 2)
save_window_.addexpr("PRodd[15][15].soma.ihyper_hyper( 0.5 )", 7, 1, 0.801475, 0.94841, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,4000,-65,0)
scene_vector_[11] = save_window_
{save_window_.view(0, -65, 4000, 65, 466, 502, 300.48, 188.8)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("Amaodd[2][1].soma.v( 0.5 )", 2, 1, 0.8, 0.9, 2)
save_window_.addexpr("Amaodd[2][2].soma.v( 0.5 )", 3, 1, 0.8, 0.9, 2)
save_window_.addexpr("Amaodd[1][2].soma.v( 0.5 )", 4, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,4000,-75,-61)
scene_vector_[12] = save_window_
{save_window_.view(0, -75, 4000, 14, 898, 856, 300.48, 201.28)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addvar("Horizontalodd[1][0].soma.v( 0.5 )", 1, 1, 0.488623, 0.908964, 2)
save_window_.addvar("Horizontalodd[0][1].soma.v( 0.5 )", 2, 1, 0.491617, 0.9, 2)
save_window_.addvar("Horizontaleven[1][0].soma.v( 0.5 )", 3, 1, 0.485629, 0.9, 2)
save_window_.addvar("Horizontaleven[2][0].soma.v( 0.5 )", 4, 1, 0.482635, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,2000,-1,1)
scene_vector_[13] = save_window_
{save_window_.view(0, -1, 2000, 2, -31, 449, 300.48, 201.28)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("Bipeven[3][3].soma.ih_ih( 0.5 )", 1, 1, 0.551497, 0.944821, 2)
save_window_.addexpr("Bipeven[3][3].soma.ik( 0.5 )", 2, 1, 0.548503, 0.931374, 2)
save_window_.addexpr("Bipeven[3][3].soma.ica( 0.5 )", 3, 1, 0.542515, 0.908964, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,2000,-1,1)
scene_vector_[14] = save_window_
{save_window_.view(0, -1, 2000, 2, 99, 109, 1066.56, 372.16)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addvar("darkinput_evenBip[0][0].i", 1, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,2000,-1,1)
scene_vector_[14] = save_window_
{save_window_.view(0, -1, 2000, 2, 99, 109, 1066.56, 372.16)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addvar("darkinput_oddBip[0][0].i", 1, 1, 0.8, 0.9, 2)
}
objectvar scene_vector_[1]
{doNotify()}
